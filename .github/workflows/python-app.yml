name: Python App

on: [push]

jobs:
  test-and-build:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # Install pip and pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          python -m pytest tests\test_*.py --doctest-modules --junitxml=junit/test-results.xml --cov=src --cov-report xml:cov.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: junit/test-results.xml
          # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-coverage
          path: cov.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Build the app
        run: |
          pip install pyinstaller
          pyinstaller --onefile src\Game.py
          cp -r images dist\images
        
      - name: Upload the app
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: dist/

